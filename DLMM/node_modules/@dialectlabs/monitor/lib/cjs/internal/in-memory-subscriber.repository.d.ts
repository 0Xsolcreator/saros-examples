import { ResourceId } from '../data-model';
import { Subscriber, SubscriberEventHandler, SubscriberRepository } from '../ports';
import { Duration } from 'luxon';
export declare class InMemorySubscriberRepository implements SubscriberRepository {
    private readonly delegate;
    private readonly cacheTtl;
    private readonly subscribers;
    private readonly onSubscriberAddedHandlers;
    private readonly onSubscriberRemovedHandlers;
    private isInitialized;
    constructor(delegate: SubscriberRepository, cacheTtl: Duration);
    static decorate(other: SubscriberRepository, cacheTtl: Duration): InMemorySubscriberRepository;
    findAll(resourceIds?: ResourceId[]): Promise<Subscriber[]>;
    private lazyInit;
    subscribe(onSubscriberAdded?: SubscriberEventHandler, onSubscriberRemoved?: SubscriberEventHandler): Promise<void>;
    private initialize;
    private updateSubscribers;
}
