"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriberRepositoryFactory = void 0;
const in_memory_subscriber_repository_1 = require("./in-memory-subscriber.repository");
const dialect_sdk_subscriber_repository_1 = require("../dialect-sdk-subscriber.repository");
const luxon_1 = require("luxon");
const DEFAULT_SUBSCRIBERS_CACHE_TTL = luxon_1.Duration.fromObject({ minutes: 1 });
class SubscriberRepositoryFactory {
    constructor(monitorProps) {
        this.monitorProps = monitorProps;
    }
    create() {
        if ('sdk' in this.monitorProps) {
            return this.createFromSdk(this.monitorProps);
        }
        else {
            return this.createFromRepository(this.monitorProps);
        }
    }
    createFromRepository(monitorProps) {
        const { subscriberRepository } = monitorProps;
        return this.decorateWithInmemoryIfNeeded(subscriberRepository);
    }
    createFromSdk(monitorProps) {
        const { sdk, subscriberRepository, subscribersCacheTTL } = monitorProps;
        return subscriberRepository
            ? this.decorateWithInmemoryIfNeeded(subscriberRepository)
            : in_memory_subscriber_repository_1.InMemorySubscriberRepository.decorate(new dialect_sdk_subscriber_repository_1.DialectSdkSubscriberRepository(sdk), subscribersCacheTTL !== null && subscribersCacheTTL !== void 0 ? subscribersCacheTTL : DEFAULT_SUBSCRIBERS_CACHE_TTL);
    }
    decorateWithInmemoryIfNeeded(subscriberRepository) {
        var _a;
        return subscriberRepository instanceof in_memory_subscriber_repository_1.InMemorySubscriberRepository
            ? subscriberRepository
            : in_memory_subscriber_repository_1.InMemorySubscriberRepository.decorate(subscriberRepository, (_a = this.monitorProps.subscribersCacheTTL) !== null && _a !== void 0 ? _a : DEFAULT_SUBSCRIBERS_CACHE_TTL);
    }
}
exports.SubscriberRepositoryFactory = SubscriberRepositoryFactory;
