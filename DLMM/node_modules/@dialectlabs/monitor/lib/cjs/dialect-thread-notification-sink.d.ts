import { NotificationSink, NotificationSinkMetadata, SubscriberRepository } from './ports';
import { Notification, ResourceId } from './data-model';
import { BlockchainSdk, DialectSdk } from '@dialectlabs/sdk';
import { NotificationTypeEligibilityPredicate } from './internal/notification-type-eligibility-predicate';
export interface DialectNotification extends Notification {
    message: string;
}
export declare class DialectThreadNotificationSink implements NotificationSink<DialectNotification> {
    private readonly sdk;
    private readonly subscriberRepository;
    private readonly notificationTypeEligibilityPredicate;
    constructor(sdk: DialectSdk<BlockchainSdk>, subscriberRepository: SubscriberRepository, notificationTypeEligibilityPredicate: NotificationTypeEligibilityPredicate);
    push({ message }: DialectNotification, recipients: ResourceId[], { notificationMetadata }: NotificationSinkMetadata): Promise<void>;
}
