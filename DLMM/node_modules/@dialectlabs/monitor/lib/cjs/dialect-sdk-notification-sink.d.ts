import { NotificationSink, NotificationSinkMetadata, SubscriberRepository } from './ports';
import { Notification, ResourceId } from './data-model';
import { BlockchainSdk, DappMessageLinksAction, DialectSdk } from '@dialectlabs/sdk';
export interface DialectSdkNotification extends Notification {
    title: string;
    message: string;
    actions?: DappMessageLinksAction;
}
export declare class DialectSdkNotificationSink implements NotificationSink<DialectSdkNotification> {
    private readonly sdk;
    private readonly subscriberRepository;
    private dapp;
    constructor(sdk: DialectSdk<BlockchainSdk>, subscriberRepository: SubscriberRepository);
    push({ title, message, actions }: DialectSdkNotification, recipients: ResourceId[], { dispatchType, notificationMetadata }: NotificationSinkMetadata): Promise<void>;
    private tryResolveNotificationTypeId;
    private resolveNotificationTypeId;
    private lookupDapp;
}
