"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolflareNotificationSink = void 0;
const axios_1 = __importDefault(require("axios"));
class SolflareNotificationSink {
    constructor(solcastApiKey, solcastEndpoint = 'https://api.solana.cloud/v1') {
        this.solcastApiKey = solcastApiKey;
        this.solcastEndpoint = solcastEndpoint;
        console.log(`solflare-notif-sink init, solcast endpoint: ${this.solcastEndpoint}`);
    }
    async push({ title, body, actionUrl }, publicKeys) {
        console.log(`solflare-notif-sink, recipient:\n`);
        console.log(publicKeys);
        const results = await Promise.allSettled(publicKeys.map((publicKey) => axios_1.default.post(`${this.solcastEndpoint}/casts/unicast`, {
            title,
            body,
            icon: null,
            image: null,
            publicKey: publicKey.toBase58(),
            platform: 'all',
            topic: 'transactional',
            actionUrl,
        }, {
            headers: { Authorization: `Basic ${this.solcastApiKey}` },
        })));
        const failedSends = results
            .filter((it) => it.status === 'rejected')
            .map((it) => it);
        if (failedSends.length > 0) {
            console.log(`Failed to send dialect solflare notification to ${failedSends.length} recipient(s), reasons: 
        ${failedSends.map((it) => it.reason)}
        `);
        }
        return;
    }
}
exports.SolflareNotificationSink = SolflareNotificationSink;
