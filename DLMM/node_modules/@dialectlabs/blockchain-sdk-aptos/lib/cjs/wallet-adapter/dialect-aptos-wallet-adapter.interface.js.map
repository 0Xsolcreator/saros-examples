{"version":3,"file":"dialect-aptos-wallet-adapter.interface.js","sourceRoot":"","sources":["../../../src/wallet-adapter/dialect-aptos-wallet-adapter.interface.ts"],"names":[],"mappings":"","sourcesContent":["import type { MaybeHexString } from 'aptos';\n\nexport interface DialectAptosWalletAdapter {\n  publicKey?: WalletAdapterProps['publicAccount']['publicKey'];\n  address?: WalletAdapterProps['publicAccount']['address'];\n  signMessage?: WalletAdapterProps['signMessage'];\n  signMessagePayload?: WalletAdapterProps['signMessagePayload'];\n}\n\nexport type PublicKey = MaybeHexString;\nexport type Address = MaybeHexString;\nexport type AuthKey = MaybeHexString;\n\nexport interface AccountKeys {\n  publicKey: PublicKey | null;\n  address: Address | null;\n  authKey: AuthKey | null;\n}\n\nexport interface WalletAdapterProps {\n  publicAccount: AccountKeys;\n  signMessage(message: string): Promise<string>;\n  signMessagePayload(payload: SignMessagePayload): Promise<SignMessageResponse>;\n}\n\nexport interface SignMessagePayload {\n  message: string;\n  nonce: string;\n}\n\nexport interface SignMessageResponse {\n  fullMessage: string;\n  message: string;\n  nonce: string;\n  prefix: string;\n  signature: string;\n}\n"]}