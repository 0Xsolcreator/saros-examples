"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DialectAptosWalletAdapterWrapper = void 0;
const tslib_1 = require("tslib");
const sdk_1 = require("@dialectlabs/sdk");
class DialectAptosWalletAdapterWrapper {
    constructor(delegate) {
        this.delegate = delegate;
    }
    get publicKey() {
        if (!this.delegate.publicKey) {
            throw new sdk_1.UnsupportedOperationError('Account public key not available', 'Wallet does not have account public key, please provide a valid account public key.');
        }
        return this.delegate.publicKey;
    }
    get address() {
        if (!this.delegate.address) {
            throw new sdk_1.UnsupportedOperationError('Account address not available', 'Wallet does not have account address, please provide a valid account address.');
        }
        return this.delegate.address;
    }
    static create(adapter) {
        return new DialectAptosWalletAdapterWrapper(adapter);
    }
    canSignMessage() {
        return Boolean(this.delegate.signMessage);
    }
    signMessage(message) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (!this.delegate.signMessage) {
                throw new sdk_1.UnsupportedOperationError('Message signing not supported', 'Wallet does not support message signing, please use wallet-adapter that supports signMessage() operation.');
            }
            return this.delegate.signMessage(message);
        });
    }
    canSignMessagePayload() {
        return Boolean(this.delegate.signMessagePayload);
    }
    signMessagePayload(payload) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (!this.delegate.signMessagePayload) {
                throw new sdk_1.UnsupportedOperationError('Message signing not supported', 'Wallet does not support message signing, please use wallet-adapter that supports signMessage() operation.');
            }
            return this.delegate.signMessagePayload(payload);
        });
    }
}
exports.DialectAptosWalletAdapterWrapper = DialectAptosWalletAdapterWrapper;
//# sourceMappingURL=dialect-aptos-wallet-adapter-wrapper.js.map