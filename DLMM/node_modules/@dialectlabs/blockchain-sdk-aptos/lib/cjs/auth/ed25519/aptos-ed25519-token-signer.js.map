{"version":3,"file":"aptos-ed25519-token-signer.js","sourceRoot":"","sources":["../../../../src/auth/ed25519/aptos-ed25519-token-signer.ts"],"names":[],"mappings":";;;;AAQA,iCAAkC;AAClC,0DAAkD;AAClD,mDAAwE;AAE3D,QAAA,8BAA8B,GAAG,GAAG,6CAAiC,UAAU,CAAC;AAE7F,MAAsB,uBAAuB;IAA7C;QACW,QAAG,GAAG,sCAA8B,CAAC;IAMhD,CAAC;CAAA;AAPD,0DAOC;AAED,MAAa,2CAA4C,SAAQ,uBAAuB;IACtF,YAAqB,oBAAsD;QACzE,KAAK,EAAE,CAAC;QADW,yBAAoB,GAApB,oBAAoB,CAAkC;IAE3E,CAAC;IAED,IAAI,OAAO;QACT,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC;QAClD,MAAM,SAAS,GAAG,iBAAS,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QACvD,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAED,IAAI,gBAAgB;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC;QACtD,MAAM,SAAS,GAAG,iBAAS,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzD,OAAO,IAAI,8BAAW,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAEK,IAAI,CAAC,OAAmB;;YAC5B,MAAM,aAAa,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACxD,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,WAAW,CACjE,aAAa,CACd,CAAC;YACF,MAAM,SAAS,GAAG,iBAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACpD,MAAM,SAAS,GAAG,SAAS,CAAC,YAAY,EAAE,CAAC;YAC3C,OAAO;gBACL,OAAO;gBACP,SAAS;aACV,CAAC;QACJ,CAAC;KAAA;CACF;AA7BD,kGA6BC","sourcesContent":["import type {\n  AccountAddress,\n  PublicKey,\n  TokenSigner,\n  TokenSignerResult,\n} from '@dialectlabs/sdk';\n\nimport type { DialectAptosWalletAdapterWrapper } from '../../wallet-adapter/dialect-aptos-wallet-adapter-wrapper';\nimport { HexString } from 'aptos';\nimport { AptosPubKey } from '../aptos-public-key';\nimport { DIALECT_BLOCKCHAIN_SDK_TYPE_APTOS } from '../../sdk/constants';\n\nexport const APTOS_ED25519_TOKEN_SIGNER_ALG = `${DIALECT_BLOCKCHAIN_SDK_TYPE_APTOS}-ed25519`;\n\nexport abstract class AptosEd25519TokenSigner implements TokenSigner {\n  readonly alg = APTOS_ED25519_TOKEN_SIGNER_ALG;\n\n  abstract subject: AccountAddress;\n  abstract subjectPublicKey: PublicKey;\n\n  abstract sign(payload: Uint8Array): Promise<TokenSignerResult>;\n}\n\nexport class DialectWalletAdapterAptosEd25519TokenSigner extends AptosEd25519TokenSigner {\n  constructor(readonly dialectWalletAdapter: DialectAptosWalletAdapterWrapper) {\n    super();\n  }\n\n  get subject(): AccountAddress {\n    const address = this.dialectWalletAdapter.address;\n    const hexString = HexString.ensure(address.toString());\n    return hexString.toString();\n  }\n\n  get subjectPublicKey(): PublicKey {\n    const publicKey = this.dialectWalletAdapter.publicKey;\n    const hexString = HexString.ensure(publicKey.toString());\n    return new AptosPubKey(hexString);\n  }\n\n  async sign(payload: Uint8Array): Promise<TokenSignerResult> {\n    const stringPayload = new TextDecoder().decode(payload);\n    const signatureString = await this.dialectWalletAdapter.signMessage(\n      stringPayload,\n    );\n    const hexString = HexString.ensure(signatureString);\n    const signature = hexString.toUint8Array();\n    return {\n      payload,\n      signature,\n    };\n  }\n}\n"]}