import { UnsupportedOperationError } from '@dialectlabs/sdk';
export class DialectAptosWalletAdapterWrapper {
    constructor(delegate) {
        this.delegate = delegate;
    }
    get publicKey() {
        if (!this.delegate.publicKey) {
            throw new UnsupportedOperationError('Account public key not available', 'Wallet does not have account public key, please provide a valid account public key.');
        }
        return this.delegate.publicKey;
    }
    get address() {
        if (!this.delegate.address) {
            throw new UnsupportedOperationError('Account address not available', 'Wallet does not have account address, please provide a valid account address.');
        }
        return this.delegate.address;
    }
    static create(adapter) {
        return new DialectAptosWalletAdapterWrapper(adapter);
    }
    canSignMessage() {
        return Boolean(this.delegate.signMessage);
    }
    async signMessage(message) {
        if (!this.delegate.signMessage) {
            throw new UnsupportedOperationError('Message signing not supported', 'Wallet does not support message signing, please use wallet-adapter that supports signMessage() operation.');
        }
        return this.delegate.signMessage(message);
    }
    canSignMessagePayload() {
        return Boolean(this.delegate.signMessagePayload);
    }
    async signMessagePayload(payload) {
        if (!this.delegate.signMessagePayload) {
            throw new UnsupportedOperationError('Message signing not supported', 'Wallet does not support message signing, please use wallet-adapter that supports signMessage() operation.');
        }
        return this.delegate.signMessagePayload(payload);
    }
}
//# sourceMappingURL=dialect-aptos-wallet-adapter-wrapper.js.map