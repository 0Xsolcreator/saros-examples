{"version":3,"file":"aptos-account-utils.js","sourceRoot":"","sources":["../../../src/utils/aptos-account-utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AAEjC,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,MAAM,UAAU,sBAAsB,CAAC,SAAyB;IAC9D,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC/B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IACrE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACpB,MAAM,OAAO,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC1C,OAAO,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;AACzC,CAAC","sourcesContent":["import { sha3_256 } from 'js-sha3';\nimport { Buffer } from 'buffer/';\nimport type { MaybeHexString } from 'aptos';\nimport { HexString } from 'aptos';\n\nexport function getAptosAccountAddress(publicKey: MaybeHexString) {\n  const hash = sha3_256.create();\n  hash.update(Buffer.from(HexString.ensure(publicKey).toUint8Array()));\n  hash.update('\\x00');\n  const authKey = new HexString(hash.hex());\n  return HexString.ensure(authKey.hex());\n}\n"]}